import java.text.DecimalFormat

plugins {
    id 'com.android.application'

}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "ru.slatinin.serverinfotcp"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 7
        versionName getVersion()
        setProperty("archivesBaseName", getVersion())
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:26.3.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}
repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()


}

static def startOfDay() {
    def now = new Date().getTime()
    def start = Date.parse("yyyy-MM-dd hh:mm:ss", "2021-01-19 0:00:00").getTime()

    return new DecimalFormat("#").format(Math.floor(Math.abs(now - start) / (1000 * 3600 * 24)))
}

static def minuteOfDay() {
    def now = new Date()
    return (now.format("HH").toInteger() * 60) + now.format("mm").toInteger()
}

static def getRelease() {
    /**
     * 0 – альфа (прототип);
     * 1 – бета (бета);
     * 2 – выпуск-кандидат (передан на тестирование заказчику);
     * 3 – публичный выпуск (окончательно передан заказчику).
     */
    return 3
}

static def getVersion() {
    return "1." + startOfDay() + "." + getRelease() + "." + minuteOfDay()
}